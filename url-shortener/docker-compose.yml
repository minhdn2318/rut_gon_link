services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    env_file:
      - production.env
    environment:
      - NODE_ENV=production
    volumes:
      - ./production.env:/app/.env:ro
    depends_on:
      mongos:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - url-shortener-network
    restart: unless-stopped


  redis:
    image: redis:7
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - url-shortener-network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped

  mongos:
    image: mongo:6
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mongo-data:/data/db
    networks: [url-shortener-network]
    restart: unless-stopped


networks:
  url-shortener-network:
    driver: bridge
    external: true

volumes:
  redis-data:
  mongo-data:
